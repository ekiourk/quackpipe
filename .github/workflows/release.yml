name: Lint, Test, and Publish

on:
  push:
    branches: [main]
  pull_request:
  release:
    types: [published]

jobs:
  lint:
    name: Ruff Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install ruff via uv
        run: uv pip install --system ruff

      - name: Run ruff
        run: ruff check .

  test:
    name: Pytest (with Testcontainers)
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install project dependencies (including [dev,s3,postgres])
        run: uv pip install --system -e ".[dev,s3,postgres]"

      - name: Run tests with coverage
        run: pytest --cov=quackpipe --cov-branch --cov-report=term --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'release'

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install build tools
        run: uv pip install --system build twine

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
